name: Windows Installer
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-installer:
    runs-on: windows-latest
    steps:
      - name: Allow Windows reserved filenames
        run: git config --system core.protectNTFS false
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: choco install -y nsis cmake eigen --installargs "ADD_CMAKE_TO_PATH=System"
      - name: Set Eigen path
        shell: pwsh
        run: |
          $eigenBase = Join-Path $env:ChocolateyInstall 'lib\eigen'
          $includeDir = Join-Path $eigenBase 'include\eigen3'
          "EIGEN3_INCLUDE_DIR=$includeDir" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "CMAKE_PREFIX_PATH=$eigenBase;$env:CMAKE_PREFIX_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Install Qt
        shell: pwsh
        run: |
          python -m pip install aqtinstall
          $qtDir = "C:\\Qt"
          python -m aqt install-qt windows desktop 5.15.2 win64_msvc2019_64 -O $qtDir -m qtcharts qtscript
          $qt = "$qtDir\5.15.2\msvc2019_64"
          "Qt5_DIR=$qt" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "CMAKE_PREFIX_PATH=$qt" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "$qt\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Install OpenBabel
        shell: pwsh
        run: |
          $release = Invoke-RestMethod https://api.github.com/repos/openbabel/openbabel/releases/latest
          $asset = $release.assets | Where-Object { $_.name -like 'OpenBabel-*-x64.exe' } | Select-Object -First 1
          $url = $asset.browser_download_url
          $out = "$env:RUNNER_TEMP\openbabel.exe"
          Invoke-WebRequest -Uri $url -OutFile $out
          Start-Process -FilePath $out -ArgumentList '/S' -Wait
      - name: Configure
        run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DCPACK_BINARY_NSIS=ON -DCPACK_BINARY_ZIP=OFF
      - name: Build
        run: |
          cmake --build build --config Release
      - name: Test
        run: |
          ctest --test-dir build -C Release --output-on-failure
      - name: Package
        run: |
          cmake --build build --config Release --target package
      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: avogadro-windows-installer
          path: build/Avogadro*.exe
          if-no-files-found: error
